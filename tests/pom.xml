<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ansible-manager-backend</artifactId>
        <groupId>com.jukusoft</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>anman-tests</artifactId>

    <properties>
        <maven.compiler.source>16</maven.compiler.source>
        <maven.compiler.target>16</maven.compiler.target>

        <sonar.coverage.jacoco.xmlReportPaths>${basedir}/../${aggregate.report.dir}</sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.jukusoft</groupId>
            <artifactId>anman-base</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jukusoft</groupId>
            <artifactId>anman-manager-server</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jukusoft</groupId>
            <artifactId>anman-worker-node</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <!-- see also: https://github.com/SonarSource/sonar-scanning-examples/tree/master/sonarqube-scanner-maven/maven-multimodule -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- generate typescript classes from DTOs, see also: https://dev.to/vuongddang/generate-typescript-from-java-2hb8 -->
            <plugin>
                <groupId>cz.habarta.typescript-generator</groupId>
                <artifactId>typescript-generator-maven-plugin</artifactId>
                <version>2.35.1025</version>
                <executions>
                    <execution>
                        <id>generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
                <configuration>
                    <jsonLibrary>jackson2</jsonLibrary>
                    <!-- <classes>
                        <class>com.jukusoft.anman.base.settings.SettingDTO</class>
                        <class>com.jukusoft.anman.base.teams.TeamDTO</class>
                        <class>com.jukusoft.anman.base.teams.TeamDetailsDTO</class>
                    </classes> -->
                    <classPatterns>com.jukusoft.anman.**.*DTO</classPatterns>
                    <outputFile>target/dtos.ts</outputFile>
                    <outputKind>module</outputKind>
                    <outputFileType>implementationFile</outputFileType>
                    <mapClasses>asClasses</mapClasses>
                    <mapEnum>asEnum</mapEnum>
                    <nonConstEnums>true</nonConstEnums>
                    <optionalProperties>useLibraryDefinition</optionalProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>